C51 COMPILER V9.60.0.0   MAIN                                                              09/21/2023 15:51:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\src\Main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\Teodor\
                    -Desktop\mc_lab_practical\FajkaV.FodorT.JK03\Feladat1\src\Main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2)
                    - FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Teodor\Desktop\mc_lab_prac
                    -tical\FajkaV.FodorT.JK03\Feladat1\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/shared/si805
                    -1Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/EFM8BB1/inc) PRINT(.\src\Main.lst) COND PAGE
                    -WIDTH(120) PAGELENGTH(65) OBJECT(.\src\Main.OBJ)

line level    source

   1          //=========================================================
   2          // src/Feladat1_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8BB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          
  17          #define LED0 P1_B4
  18          #define BTN0 P0_B2
  19          //-----------------------------------------------------------------------------
  20          // SiLabs_Startup() Routine
  21          // ----------------------------------------------------------------------------
  22          // This function is called immediately after reset, before the initialization
  23          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  24          // useful place to disable the watchdog timer, which is enable by default
  25          // and may trigger before main() in some instances.
  26          //-----------------------------------------------------------------------------
  27          
  28          volatile uint8_t counter = 0U; //using 16 bit value, in case of 8 bytes 256 is the max value
  29          volatile bit start = 0;
  30          volatile bit stop = 0;
  31          
  32          //simple software delay
  33          void Delay(){
  34   1          uint16_t i, j;
  35   1          for (i = 0; i < 1000; i++){
  36   2             for (j = 0; j < 500; j++);
  37   2          }
  38   1      
  39   1      }
  40          
  41          void SiLabs_Startup (void)
  42          {
  43   1        // $[SiLabs Startup]
  44   1        // [SiLabs Startup]$
  45   1      }
  46          
  47          //-----------------------------------------------------------------------------
  48          // main() Routine
  49          // ----------------------------------------------------------------------------
  50          int main (void)
  51          {
C51 COMPILER V9.60.0.0   MAIN                                                              09/21/2023 15:51:52 PAGE 2   

  52   1        // Call hardware initialization routine
  53   1        enter_DefaultMode_from_RESET();
  54   1        Delay(); //delay
  55   1        LED0 = 0; //turn on LED0
  56   1        start = 1;
  57   1        while (1) 
  58   1        {
  59   2            if(!stop) //if the passed time is smaller than 200ms
  60   2            {
  61   3                IE_EA = 0; //enter critical section
  62   3                if (BTN0 == 0) //if the button is pressed in time
  63   3                {
  64   4                    LED0 = 1; //turn off the LED0
  65   4                    stop = 1; //stop the game
  66   4                }
  67   3                IE_EA = 1; //leave critical section
  68   3            }
  69   2      
  70   2         }
  71   1      
  72   1       }
  73          
  74          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     56    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
