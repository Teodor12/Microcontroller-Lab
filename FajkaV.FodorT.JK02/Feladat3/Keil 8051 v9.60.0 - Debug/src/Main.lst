C51 COMPILER V9.60.0.0   MAIN                                                              09/16/2023 09:36:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\src\Main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\Teodor\
                    -Desktop\mc_lab_practical\FajkaV.FodorT.JK02\Feladat3\src\Main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2)
                    - FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Teodor\Desktop\mc_lab_prac
                    -tical\FajkaV.FodorT.JK02\Feladat3\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/shared/si805
                    -1Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/EFM8BB1/inc) PRINT(.\src\Main.lst) COND PAGE
                    -WIDTH(120) PAGELENGTH(65) OBJECT(.\src\Main.OBJ)

line level    source

   1          //=========================================================
   2          // src/lab_02_3_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8BB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          
  17          #define BTN0 P0_B2
  18          #define LED0 P1_B4
  19          #define PRELL 50U
  20          //-----------------------------------------------------------------------------
  21          // SiLabs_Startup() Routine
  22          // ----------------------------------------------------------------------------
  23          // This function is called immediately after reset, before the initialization
  24          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  25          // useful place to disable the watchdog timer, which is enable by default
  26          // and may trigger before main() in some instances.
  27          //-----------------------------------------------------------------------------
  28          void SiLabs_Startup (void)
  29          {
  30   1        // $[SiLabs Startup]
  31   1        // [SiLabs Startup]$
  32   1      }
  33          
  34          uint8_t counter = 0; //counter for BTN0
  35          uint8_t led_counter = 0; //counter for LED0
  36          
  37          void Delay(){
  38   1        while(counter < PRELL);
  39   1      }
  40          
  41          void Blink(uint8_t *index){
  42   1        static uint8_t half_periods[3] = {100U, 50U, 10U};
  43   1        LED0 = !LED0;
  44   1        while(led_counter < (half_periods[*index]));
  45   1        led_counter = 0;
  46   1      }
  47          
  48          //-----------------------------------------------------------------------------
  49          // main() Routine
  50          // ----------------------------------------------------------------------------
  51          
C51 COMPILER V9.60.0.0   MAIN                                                              09/16/2023 09:36:22 PAGE 2   

  52          int main (void)
  53          {
  54   1        // Call hardware initialization routine
  55   1        enter_DefaultMode_from_RESET();
  56   1      
  57   1        while (1) 
  58   1        {
  59   2            static uint8_t i = 0;
  60   2            Blink(&i);
  61   2            if(!BTN0){
  62   3                    Delay();
  63   3                    i++;
  64   3                    if(i > 2){
  65   4                        i = 0;
  66   4                    }
  67   3                    while(!BTN0);
  68   3                    counter = 0;
  69   3                    Delay();
  70   3             }
  71   2      
  72   2         }
  73   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     77    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
